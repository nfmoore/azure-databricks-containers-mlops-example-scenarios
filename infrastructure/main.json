{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.4.1008.15138",
      "templateHash": "9297429160599592606"
    }
  },
  "functions": [],
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-06-01",
      "name": "m_databricks",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "resourceInstance": {
            "value": "01"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1008.15138",
              "templateHash": "8394999026444693176"
            }
          },
          "parameters": {
            "workloadIdentifier": {
              "type": "string",
              "defaultValue": "[substring(uniqueString(resourceGroup().id), 0, 6)]",
              "metadata": {
                "description": "Workload Identifier"
              }
            },
            "resourceInstance": {
              "type": "string",
              "defaultValue": "001",
              "metadata": {
                "description": "Resource Instance"
              }
            },
            "resourceLocation": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Resource Location"
              }
            },
            "databricksWorkspaceName": {
              "type": "string",
              "defaultValue": "[format('dbw{0}{1}', parameters('workloadIdentifier'), parameters('resourceInstance'))]",
              "metadata": {
                "description": "Databricks Workspace Name"
              }
            },
            "databricksManagedResourceGroupName": {
              "type": "string",
              "defaultValue": "[format('{0}-dbw-mngd', resourceGroup().name)]",
              "metadata": {
                "description": "Databricks Managed Resource Group Name"
              }
            },
            "pricingTier": {
              "type": "string",
              "defaultValue": "standard",
              "allowedValues": [
                "standard",
                "premium"
              ],
              "metadata": {
                "description": "The pricing tier of workspace."
              }
            },
            "deployDataLakeAccount": {
              "type": "bool",
              "defaultValue": true,
              "metadata": {
                "description": "Control Deployment of Data Lake Storage Account"
              }
            },
            "dataLakeAccountName": {
              "type": "string",
              "defaultValue": "[format('st{0}{1}', parameters('workloadIdentifier'), parameters('resourceInstance'))]",
              "metadata": {
                "description": "Data Lake Account Name"
              }
            },
            "dataLakeAccountSKU": {
              "type": "string",
              "defaultValue": "Standard_LRS",
              "metadata": {
                "description": "Data Lake Storage Account SKU"
              }
            },
            "dataLakeBronzeZoneName": {
              "type": "string",
              "defaultValue": "raw",
              "metadata": {
                "description": "Data Lake Bronze Zone Container Name"
              }
            },
            "dataLakeSilverZoneName": {
              "type": "string",
              "defaultValue": "trusted",
              "metadata": {
                "description": "Data Lake Silver Zone Container Name"
              }
            },
            "dataLakeGoldZoneName": {
              "type": "string",
              "defaultValue": "curated",
              "metadata": {
                "description": "Data Lake Gold Zone Container Name"
              }
            },
            "dataLakeSandboxZoneName": {
              "type": "string",
              "defaultValue": "sandbox",
              "metadata": {
                "description": "Data Lake Sandbox Zone Container Name"
              }
            },
            "allowSharedKeyAccess": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Allow Shared Key Access"
              }
            }
          },
          "functions": [],
          "variables": {
            "privateContainerNames": [
              "[parameters('dataLakeBronzeZoneName')]",
              "[parameters('dataLakeSilverZoneName')]",
              "[parameters('dataLakeGoldZoneName')]",
              "[parameters('dataLakeSandboxZoneName')]"
            ]
          },
          "resources": [
            {
              "type": "Microsoft.Databricks/workspaces",
              "apiVersion": "2018-04-01",
              "name": "[parameters('databricksWorkspaceName')]",
              "location": "[parameters('resourceLocation')]",
              "sku": {
                "name": "[parameters('pricingTier')]"
              },
              "properties": {
                "managedResourceGroupId": "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('databricksManagedResourceGroupName'))]",
                "parameters": {
                  "enableNoPublicIp": {
                    "value": false
                  }
                }
              }
            },
            {
              "condition": "[equals(parameters('deployDataLakeAccount'), true())]",
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2021-02-01",
              "name": "[parameters('dataLakeAccountName')]",
              "location": "[parameters('resourceLocation')]",
              "properties": {
                "isHnsEnabled": true,
                "accessTier": "Hot",
                "allowBlobPublicAccess": true,
                "supportsHttpsTrafficOnly": true,
                "allowSharedKeyAccess": "[parameters('allowSharedKeyAccess')]",
                "networkAcls": {
                  "defaultAction": "Allow",
                  "bypass": "AzureServices",
                  "resourceAccessRules": [
                    {
                      "tenantId": "[subscription().tenantId]",
                      "resourceId": "[resourceId('Microsoft.Databricks/workspaces', parameters('databricksWorkspaceName'))]"
                    }
                  ]
                }
              },
              "kind": "StorageV2",
              "sku": {
                "name": "[parameters('dataLakeAccountSKU')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Databricks/workspaces', parameters('databricksWorkspaceName'))]"
              ]
            },
            {
              "condition": "[equals(parameters('deployDataLakeAccount'), true())]",
              "copy": {
                "name": "r_dataLakePrivateContainer",
                "count": "[length(variables('privateContainerNames'))]"
              },
              "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
              "apiVersion": "2021-02-01",
              "name": "[format('{0}/default/{1}', parameters('dataLakeAccountName'), variables('privateContainerNames')[copyIndex()])]",
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('dataLakeAccountName'))]"
              ]
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-06-01",
      "name": "m_microservices_01",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "resourceInstance": {
            "value": "01"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1008.15138",
              "templateHash": "5434684860155971323"
            }
          },
          "parameters": {
            "workloadIdentifier": {
              "type": "string",
              "defaultValue": "[substring(uniqueString(resourceGroup().id), 0, 6)]",
              "metadata": {
                "description": "Workload Identifier"
              }
            },
            "resourceInstance": {
              "type": "string",
              "defaultValue": "001",
              "metadata": {
                "description": "Resource Instance"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "The location of resources"
              }
            },
            "containerRegistryName": {
              "type": "string",
              "defaultValue": "[format('cr{0}{1}', parameters('workloadIdentifier'), parameters('resourceInstance'))]",
              "metadata": {
                "description": "Container Registry Name"
              }
            },
            "useExistingContainerRegistry": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Create new Log Analytics Workspace "
              }
            },
            "containerRegistryResourceGroupName": {
              "type": "string",
              "defaultValue": "[resourceGroup().name]",
              "metadata": {
                "description": "Log Analytics Workspace SKU"
              }
            },
            "adminUserEnabled": {
              "type": "bool",
              "defaultValue": true,
              "metadata": {
                "description": "Enable Container Registry admin user"
              }
            },
            "logAnalyticsWorkspaceName": {
              "type": "string",
              "defaultValue": "[format('law{0}{1}', parameters('workloadIdentifier'), parameters('resourceInstance'))]",
              "metadata": {
                "description": "Log Analytics Workspace Name"
              }
            },
            "useExistingLogAnalyticsWorkspace": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Create new Log Analytics Workspace "
              }
            },
            "logAnalyticsWorkspaceResourceGroupName": {
              "type": "string",
              "defaultValue": "[resourceGroup().name]",
              "metadata": {
                "description": "Log Analytics Workspace SKU"
              }
            },
            "logAnalyticsWorkspaceSKU": {
              "type": "string",
              "defaultValue": "PerGB2018",
              "metadata": {
                "description": "Log Analytics Workspace SKU"
              }
            },
            "logAnalyticsWorkspaceDailyQuota": {
              "type": "int",
              "defaultValue": 1,
              "metadata": {
                "description": "Log Analytics Workspace Daily Quota"
              }
            },
            "logAnalyticsWorkspaceRetentionPeriod": {
              "type": "int",
              "defaultValue": 30,
              "metadata": {
                "description": "Log Analytics Workspace Retention Period"
              }
            },
            "kubernetesServiceClusterName": {
              "type": "string",
              "defaultValue": "[format('aks{0}{1}', parameters('workloadIdentifier'), parameters('resourceInstance'))]",
              "metadata": {
                "description": "The name of the Managed Cluster resource"
              }
            },
            "dnsPrefix": {
              "type": "string",
              "defaultValue": "dns",
              "metadata": {
                "description": "DNS prefix to use with hosted Kubernetes API server FQDN"
              }
            },
            "osDiskSizeGB": {
              "type": "int",
              "defaultValue": 0,
              "maxValue": 1023,
              "minValue": 0,
              "metadata": {
                "description": "Disk size (in GiB) to provision for each of the agent pool nodes"
              }
            },
            "kubernetesVersion": {
              "type": "string",
              "defaultValue": "1.21.7",
              "metadata": {
                "description": "Kubernetes cluster version"
              }
            },
            "networkPlugin": {
              "type": "string",
              "defaultValue": "kubenet",
              "allowedValues": [
                "azure",
                "kubenet"
              ],
              "metadata": {
                "description": "Network plugin used for building Kubernetes network."
              }
            },
            "enableRBAC": {
              "type": "bool",
              "defaultValue": true,
              "metadata": {
                "description": "Enable RBAC."
              }
            },
            "enablePrivateCluster": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Enable private network access to the Kubernetes cluster"
              }
            },
            "enableHttpApplicationRouting": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Enable application routing"
              }
            },
            "enableAzurePolicy": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Enable Azure Policy addon"
              }
            },
            "enableIngressApplicationGateway": {
              "type": "bool",
              "defaultValue": true,
              "metadata": {
                "description": "Enable application gateway"
              }
            },
            "ingressApplicationGatewayName": {
              "type": "string",
              "defaultValue": "ingress-appgateway",
              "metadata": {
                "description": "Application gateway name"
              }
            },
            "ingressApplicationGatewaySubnetPrefix": {
              "type": "string",
              "defaultValue": "10.1.0.0/16",
              "metadata": {
                "description": "Application gateway subnet prefix"
              }
            },
            "agentVMSize": {
              "type": "string",
              "defaultValue": "Standard_DS2_v2",
              "metadata": {
                "description": "Cluster Virtual Machine size"
              }
            },
            "agentCount": {
              "type": "int",
              "defaultValue": 3,
              "maxValue": 50,
              "minValue": 1,
              "metadata": {
                "description": "Number of nodes for the cluster"
              }
            },
            "minAgentCount": {
              "type": "int",
              "defaultValue": 1,
              "maxValue": 50,
              "minValue": 1,
              "metadata": {
                "description": "Min number of nodes for the cluster"
              }
            },
            "maxAgentCount": {
              "type": "int",
              "defaultValue": 3,
              "maxValue": 50,
              "minValue": 1,
              "metadata": {
                "description": "Max number of nodes for the cluster"
              }
            }
          },
          "functions": [],
          "variables": {
            "azureRbacContributorRoleId": "b24988ac-6180-42a0-ab88-20f7382dd24c"
          },
          "resources": [
            {
              "condition": "[equals(parameters('useExistingContainerRegistry'), false())]",
              "type": "Microsoft.ContainerRegistry/registries",
              "apiVersion": "2019-05-01",
              "name": "[parameters('containerRegistryName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Basic"
              },
              "properties": {
                "adminUserEnabled": "[parameters('adminUserEnabled')]"
              }
            },
            {
              "condition": "[equals(parameters('useExistingLogAnalyticsWorkspace'), false())]",
              "type": "Microsoft.OperationalInsights/workspaces",
              "apiVersion": "2020-03-01-preview",
              "name": "[parameters('logAnalyticsWorkspaceName')]",
              "location": "[parameters('location')]",
              "properties": {
                "retentionInDays": "[parameters('logAnalyticsWorkspaceRetentionPeriod')]",
                "sku": {
                  "name": "[parameters('logAnalyticsWorkspaceSKU')]"
                },
                "workspaceCapping": {
                  "dailyQuotaGb": "[parameters('logAnalyticsWorkspaceDailyQuota')]"
                }
              }
            },
            {
              "type": "Microsoft.ContainerService/managedClusters",
              "apiVersion": "2021-07-01",
              "name": "[parameters('kubernetesServiceClusterName')]",
              "location": "[parameters('location')]",
              "tags": {},
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "kubernetesVersion": "[parameters('kubernetesVersion')]",
                "enableRBAC": "[parameters('enableRBAC')]",
                "dnsPrefix": "[parameters('dnsPrefix')]",
                "agentPoolProfiles": [
                  {
                    "name": "agentpool",
                    "osDiskSizeGB": "[parameters('osDiskSizeGB')]",
                    "count": "[parameters('agentCount')]",
                    "enableAutoScaling": true,
                    "minCount": "[parameters('minAgentCount')]",
                    "maxCount": "[parameters('maxAgentCount')]",
                    "vmSize": "[parameters('agentVMSize')]",
                    "osType": "Linux",
                    "mode": "System",
                    "type": "VirtualMachineScaleSets",
                    "maxPods": 110
                  }
                ],
                "networkProfile": {
                  "loadBalancerSku": "standard",
                  "networkPlugin": "[parameters('networkPlugin')]"
                },
                "apiServerAccessProfile": {
                  "enablePrivateCluster": "[parameters('enablePrivateCluster')]"
                },
                "addonProfiles": {
                  "httpApplicationRouting": {
                    "enabled": "[parameters('enableHttpApplicationRouting')]"
                  },
                  "azurepolicy": {
                    "enabled": "[parameters('enableAzurePolicy')]"
                  },
                  "ingressApplicationGateway": {
                    "enabled": "[parameters('enableIngressApplicationGateway')]",
                    "config": {
                      "applicationGatewayName": "[parameters('ingressApplicationGatewayName')]",
                      "subnetPrefix": "[parameters('ingressApplicationGatewaySubnetPrefix')]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-04-01-preview",
              "name": "[guid(parameters('kubernetesServiceClusterName'), parameters('containerRegistryName'), 'Contributor')]",
              "properties": {
                "principalId": "[reference(resourceId('Microsoft.ContainerService/managedClusters', parameters('kubernetesServiceClusterName')), '2021-07-01', 'full').identity.principalId]",
                "principalType": "ServicePrincipal",
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('azureRbacContributorRoleId'))]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ContainerService/managedClusters', parameters('kubernetesServiceClusterName'))]"
              ]
            }
          ],
          "outputs": {
            "controlPlaneFQDN": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ContainerService/managedClusters', parameters('kubernetesServiceClusterName'))).fqdn]"
            },
            "containerRegistryName": {
              "type": "string",
              "value": "[parameters('containerRegistryName')]"
            },
            "logAnalyticsWorkspaceName": {
              "type": "string",
              "value": "[parameters('logAnalyticsWorkspaceName')]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-06-01",
      "name": "m_microservices_02",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "resourceInstance": {
            "value": "02"
          },
          "useExistingContainerRegistry": {
            "value": true
          },
          "useExistingLogAnalyticsWorkspace": {
            "value": true
          },
          "containerRegistryName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'm_microservices_01'), '2020-06-01').outputs.containerRegistryName.value]"
          },
          "logAnalyticsWorkspaceName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'm_microservices_01'), '2020-06-01').outputs.logAnalyticsWorkspaceName.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1008.15138",
              "templateHash": "5434684860155971323"
            }
          },
          "parameters": {
            "workloadIdentifier": {
              "type": "string",
              "defaultValue": "[substring(uniqueString(resourceGroup().id), 0, 6)]",
              "metadata": {
                "description": "Workload Identifier"
              }
            },
            "resourceInstance": {
              "type": "string",
              "defaultValue": "001",
              "metadata": {
                "description": "Resource Instance"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "The location of resources"
              }
            },
            "containerRegistryName": {
              "type": "string",
              "defaultValue": "[format('cr{0}{1}', parameters('workloadIdentifier'), parameters('resourceInstance'))]",
              "metadata": {
                "description": "Container Registry Name"
              }
            },
            "useExistingContainerRegistry": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Create new Log Analytics Workspace "
              }
            },
            "containerRegistryResourceGroupName": {
              "type": "string",
              "defaultValue": "[resourceGroup().name]",
              "metadata": {
                "description": "Log Analytics Workspace SKU"
              }
            },
            "adminUserEnabled": {
              "type": "bool",
              "defaultValue": true,
              "metadata": {
                "description": "Enable Container Registry admin user"
              }
            },
            "logAnalyticsWorkspaceName": {
              "type": "string",
              "defaultValue": "[format('law{0}{1}', parameters('workloadIdentifier'), parameters('resourceInstance'))]",
              "metadata": {
                "description": "Log Analytics Workspace Name"
              }
            },
            "useExistingLogAnalyticsWorkspace": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Create new Log Analytics Workspace "
              }
            },
            "logAnalyticsWorkspaceResourceGroupName": {
              "type": "string",
              "defaultValue": "[resourceGroup().name]",
              "metadata": {
                "description": "Log Analytics Workspace SKU"
              }
            },
            "logAnalyticsWorkspaceSKU": {
              "type": "string",
              "defaultValue": "PerGB2018",
              "metadata": {
                "description": "Log Analytics Workspace SKU"
              }
            },
            "logAnalyticsWorkspaceDailyQuota": {
              "type": "int",
              "defaultValue": 1,
              "metadata": {
                "description": "Log Analytics Workspace Daily Quota"
              }
            },
            "logAnalyticsWorkspaceRetentionPeriod": {
              "type": "int",
              "defaultValue": 30,
              "metadata": {
                "description": "Log Analytics Workspace Retention Period"
              }
            },
            "kubernetesServiceClusterName": {
              "type": "string",
              "defaultValue": "[format('aks{0}{1}', parameters('workloadIdentifier'), parameters('resourceInstance'))]",
              "metadata": {
                "description": "The name of the Managed Cluster resource"
              }
            },
            "dnsPrefix": {
              "type": "string",
              "defaultValue": "dns",
              "metadata": {
                "description": "DNS prefix to use with hosted Kubernetes API server FQDN"
              }
            },
            "osDiskSizeGB": {
              "type": "int",
              "defaultValue": 0,
              "maxValue": 1023,
              "minValue": 0,
              "metadata": {
                "description": "Disk size (in GiB) to provision for each of the agent pool nodes"
              }
            },
            "kubernetesVersion": {
              "type": "string",
              "defaultValue": "1.21.7",
              "metadata": {
                "description": "Kubernetes cluster version"
              }
            },
            "networkPlugin": {
              "type": "string",
              "defaultValue": "kubenet",
              "allowedValues": [
                "azure",
                "kubenet"
              ],
              "metadata": {
                "description": "Network plugin used for building Kubernetes network."
              }
            },
            "enableRBAC": {
              "type": "bool",
              "defaultValue": true,
              "metadata": {
                "description": "Enable RBAC."
              }
            },
            "enablePrivateCluster": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Enable private network access to the Kubernetes cluster"
              }
            },
            "enableHttpApplicationRouting": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Enable application routing"
              }
            },
            "enableAzurePolicy": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Enable Azure Policy addon"
              }
            },
            "enableIngressApplicationGateway": {
              "type": "bool",
              "defaultValue": true,
              "metadata": {
                "description": "Enable application gateway"
              }
            },
            "ingressApplicationGatewayName": {
              "type": "string",
              "defaultValue": "ingress-appgateway",
              "metadata": {
                "description": "Application gateway name"
              }
            },
            "ingressApplicationGatewaySubnetPrefix": {
              "type": "string",
              "defaultValue": "10.1.0.0/16",
              "metadata": {
                "description": "Application gateway subnet prefix"
              }
            },
            "agentVMSize": {
              "type": "string",
              "defaultValue": "Standard_DS2_v2",
              "metadata": {
                "description": "Cluster Virtual Machine size"
              }
            },
            "agentCount": {
              "type": "int",
              "defaultValue": 3,
              "maxValue": 50,
              "minValue": 1,
              "metadata": {
                "description": "Number of nodes for the cluster"
              }
            },
            "minAgentCount": {
              "type": "int",
              "defaultValue": 1,
              "maxValue": 50,
              "minValue": 1,
              "metadata": {
                "description": "Min number of nodes for the cluster"
              }
            },
            "maxAgentCount": {
              "type": "int",
              "defaultValue": 3,
              "maxValue": 50,
              "minValue": 1,
              "metadata": {
                "description": "Max number of nodes for the cluster"
              }
            }
          },
          "functions": [],
          "variables": {
            "azureRbacContributorRoleId": "b24988ac-6180-42a0-ab88-20f7382dd24c"
          },
          "resources": [
            {
              "condition": "[equals(parameters('useExistingContainerRegistry'), false())]",
              "type": "Microsoft.ContainerRegistry/registries",
              "apiVersion": "2019-05-01",
              "name": "[parameters('containerRegistryName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Basic"
              },
              "properties": {
                "adminUserEnabled": "[parameters('adminUserEnabled')]"
              }
            },
            {
              "condition": "[equals(parameters('useExistingLogAnalyticsWorkspace'), false())]",
              "type": "Microsoft.OperationalInsights/workspaces",
              "apiVersion": "2020-03-01-preview",
              "name": "[parameters('logAnalyticsWorkspaceName')]",
              "location": "[parameters('location')]",
              "properties": {
                "retentionInDays": "[parameters('logAnalyticsWorkspaceRetentionPeriod')]",
                "sku": {
                  "name": "[parameters('logAnalyticsWorkspaceSKU')]"
                },
                "workspaceCapping": {
                  "dailyQuotaGb": "[parameters('logAnalyticsWorkspaceDailyQuota')]"
                }
              }
            },
            {
              "type": "Microsoft.ContainerService/managedClusters",
              "apiVersion": "2021-07-01",
              "name": "[parameters('kubernetesServiceClusterName')]",
              "location": "[parameters('location')]",
              "tags": {},
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "kubernetesVersion": "[parameters('kubernetesVersion')]",
                "enableRBAC": "[parameters('enableRBAC')]",
                "dnsPrefix": "[parameters('dnsPrefix')]",
                "agentPoolProfiles": [
                  {
                    "name": "agentpool",
                    "osDiskSizeGB": "[parameters('osDiskSizeGB')]",
                    "count": "[parameters('agentCount')]",
                    "enableAutoScaling": true,
                    "minCount": "[parameters('minAgentCount')]",
                    "maxCount": "[parameters('maxAgentCount')]",
                    "vmSize": "[parameters('agentVMSize')]",
                    "osType": "Linux",
                    "mode": "System",
                    "type": "VirtualMachineScaleSets",
                    "maxPods": 110
                  }
                ],
                "networkProfile": {
                  "loadBalancerSku": "standard",
                  "networkPlugin": "[parameters('networkPlugin')]"
                },
                "apiServerAccessProfile": {
                  "enablePrivateCluster": "[parameters('enablePrivateCluster')]"
                },
                "addonProfiles": {
                  "httpApplicationRouting": {
                    "enabled": "[parameters('enableHttpApplicationRouting')]"
                  },
                  "azurepolicy": {
                    "enabled": "[parameters('enableAzurePolicy')]"
                  },
                  "ingressApplicationGateway": {
                    "enabled": "[parameters('enableIngressApplicationGateway')]",
                    "config": {
                      "applicationGatewayName": "[parameters('ingressApplicationGatewayName')]",
                      "subnetPrefix": "[parameters('ingressApplicationGatewaySubnetPrefix')]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-04-01-preview",
              "name": "[guid(parameters('kubernetesServiceClusterName'), parameters('containerRegistryName'), 'Contributor')]",
              "properties": {
                "principalId": "[reference(resourceId('Microsoft.ContainerService/managedClusters', parameters('kubernetesServiceClusterName')), '2021-07-01', 'full').identity.principalId]",
                "principalType": "ServicePrincipal",
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('azureRbacContributorRoleId'))]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ContainerService/managedClusters', parameters('kubernetesServiceClusterName'))]"
              ]
            }
          ],
          "outputs": {
            "controlPlaneFQDN": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ContainerService/managedClusters', parameters('kubernetesServiceClusterName'))).fqdn]"
            },
            "containerRegistryName": {
              "type": "string",
              "value": "[parameters('containerRegistryName')]"
            },
            "logAnalyticsWorkspaceName": {
              "type": "string",
              "value": "[parameters('logAnalyticsWorkspaceName')]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'm_microservices_01')]"
      ]
    }
  ]
}