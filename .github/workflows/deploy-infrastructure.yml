name: Deploy Infrastructure

on:
  workflow_dispatch:

env:
  TEMPLATE_FILE: infrastructure/main.biceps

jobs: 
  build:
    name: Bicep Build
    runs-on: ubuntu-latest
    steps:

    # Checkout the repository to the GitHub Actions runner
    - name: Checkout repo
      uses: actions/checkout@v3

    # Authenticate to Az CLI using OIDC
    - name: 'Az CLI login'
      uses: azure/login@v2
      with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  
    # Checks that all Bicep configuration files adhere to a canonical format
    - name: Bicep lint
      uses: Azure/cli@v2
      with:
        inlineScript: az bicep build --file ${{ env.TEMPLATE_FILE }}

    # Validate whether the template is valid at subscription scope
    - name: Bicep validate
      uses: Azure/cli@v2
      with:
        inlineScript: |
          az deployment sub validate \
            --name validate-${{ github.run_id }} \
            --template-file ${{ env.TEMPLATE_FILE }} \
            --location ${{ vars.LOCATION }} \
            --parameters resourceGroupName=${{ vars.RESOURCE_GROUP_NAME }} \
            --parameters mrgDatabricksName=${{ vars.DATARBICKS_MANAGED_RESOURCE_GROUP_NAME }} \
            --parameters location=${{ vars.LOCATION }}

  deploy:
    name: 'Bicep Deploy'
    runs-on: ubuntu-latest
    needs: [build]
    steps:

    # Checkout the repository to the GitHub Actions runner
    - name: Checkout repo
      uses: actions/checkout@v3

    # Authenticate to Az CLI using OIDC
    - name: 'Az CLI login'
      uses: azure/login@v2
      with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  
      # Deploy template to subscription
    - name: "Bicep deployment"
      uses: Azure/cli@v2
      with:
        inlineScript: |
          az deployment sub create \
            --name validate-${{ github.run_id }} \
            --template-file ${{ env.TEMPLATE_FILE }} \
            --location ${{ vars.LOCATION }} \
            --parameters resourceGroupName=${{ vars.RESOURCE_GROUP_NAME }} \
            --parameters mrgDatabricksName=${{ vars.DATARBICKS_MANAGED_RESOURCE_GROUP_NAME }} \
            --parameters location=${{ vars.LOCATION }}
            >> ./deployment-output.json
